//T.C = O(n)
class Solution {
    public boolean check(int[] arr) {
        int count=0;
        for(int i=1;i<arr.length;i++){
            if(arr[i]<arr[i-1]){
                count++;
            }
        }
        if(arr[arr.length-1]>arr[0]){
            count++;
        }
        return count<=1;
    }
}

// T.C = O(n*n)
class Solution {
    public boolean isSortedOrRotated(int k,int[] nums){
        int n = nums.length;
        int pre = nums[k];
        for(int i=1;i<n;i++){
            if(pre > nums[(k+i)%n]){
                return false;
            }
            pre = nums[(k+i)%n];
        }
        return true;
    }
    public boolean check(int[] nums) {
        int n = nums.length;
        for(int i=0;i<n;i++){
            if(isSortedOrRotated(i,nums)){
                return true;
            }
        }
        return false;
    }
}
